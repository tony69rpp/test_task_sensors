""МЫСЛИ""

Выбор инструментов:
Остановился на FastAPI из-за поддержки асинхронности и встроенной документации, что сразу отсеило другие варианты. Для валидации данных применил Pydantic, так как он интегрирован с FastAPI.

Организация кода:
Разобрался и реализовал два основных эндпоинта: для отправки данных и для получения результатов. Структуру базы данных взял из технического задания. Для фоновой обработки использовал механизм фоновых задач самого фреймворка.

Проверка данных:
Воспользовался встроенными валидаторами. Для проверки значений в зависимости от типа измерения потребовалось использовать валидатор на уровне всей модели.

Расчёты:
Для статистических расчётов использовал библиотеку numpy. Формулы для определения выбросов и стандартного отклонения взял из общедоступных источников. Добавил расчёт коэффициента вариации для оценки стабильности показаний.

Возникшие сложности:
Вначале были проблемы с обновлением статусов в базе данных. Возникали ошибки при работе с форматами времени и делением на ноль в вычислениях — добавил дополнительные проверки.

Итог:
Система выполняет основные требования: принимает данные, проверяет их, обрабатывает в фоновом режиме и возвращает результаты. Асинхронная обработка предотвращает блокировку сервера при долгих вычислениях.
